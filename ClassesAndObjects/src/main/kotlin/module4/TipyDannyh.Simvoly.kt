package module4

fun main() {
    /*                              ТИПЫ ДАННЫХ. СИМВОЛЫ

    Цели и задачи урока:
    - Узнат, что такое символьный тип
    - Понять, как работать с переменными символьного типа
    - Разобраться, как инициализировать символьные переменные

    Символы в Kotlin представлены типом Char

    val character: Char = 'A'

    Char - это единичный символ, заключенный в одинарные ковычки.

    Этот типявляеться основой для строкового типа.
    Используеться для обработки одиночных символов.

    Тип Char поддерживает упрвляющие символы:
    \t, \b, \n, \r, \', \\ и \$.

                            ОПЕРАЦИИ НАД СИМВОЛАМИ

    Тип Char можно конвертировать в тип Int. Результатом этой операции будет код этого символа
    в таблице символов Unicode. Так, код заглавной латинской буквы A в таблице Unicode - 65.
    Большинство операций над символами работают именно с кодом символа.

    Чаще всего символьный тип используеться, как вспомогательный при работе со строками:
    - поиск и замена символа
    - проверка наличия символа
    - сравнение символов

    Поный список операций над символьным типом можно найти в официальной документации на сайте:
    kotlinlang.org
   */

    val character: Char = 'A'
    val charNumber1 = '1'

    println(character.toInt())    // в консоле выводиться 65

    /*  Большинство операций над символами работают именно с кодом символа.
    Чаще всего симввольный тип используеться как вспомогательный при работе со строками - это:
    поиск, замена символа, проверка наличия символов, сравнение символов.
    Над символами разрешены арифметические операции сложения и вычетания, поскольку операции будут проводиться
    над кодами этих символов.  ПРИМЕР: */

    val charC = character + 2  // был символ A а после сложения стал символ C
    println(charC)


}
